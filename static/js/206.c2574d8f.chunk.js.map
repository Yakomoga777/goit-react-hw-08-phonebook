{"version":3,"file":"static/js/206.c2574d8f.chunk.js","mappings":"+LAAO,IAAMA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASA,QAAnB,EACtBC,EAAkB,SAAAF,GAAK,OAAIA,EAAMC,SAASE,SAAnB,C,gHCCvBC,EAAaC,EAAAA,GAAAA,KAAH,2JASVC,EAAqBD,EAAAA,GAAAA,MAAH,4E,uCCJlBE,EAAc,SAAC,GAAa,IAAXC,EAAU,EAAVA,IAC5B,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAEXd,GAAWe,EAAAA,EAAAA,IAAYjB,EAAAA,IACvBkB,GAAaD,EAAAA,EAAAA,IAAYE,EAAAA,IAGzBC,EAAe,SAAAC,GACK,SAApBA,EAAIC,OAAOX,KACbC,EAAQS,EAAIC,OAAOC,OACU,WAApBF,EAAIC,OAAOX,MACpBG,EAAUO,EAAIC,OAAOC,MAExB,EA2BKC,EAAQ,WACZZ,EAAQ,IACRE,EAAU,GACX,EAED,OACE,0BACE,UAACT,EAAD,CAAYoB,SA/BC,SAAAJ,GACfA,EAAIK,iBACJ,IAAMC,EAAON,EAAIC,OAGXM,EAAa,CAAEjB,KAFRgB,EAAKE,SAASlB,KAAKY,MAELV,OADZc,EAAKE,SAAShB,OAAOU,OAK9BO,EAAe5B,EAAS6B,MAC5B,SAAAC,GAAO,OAAIA,EAAQrB,KAAKsB,gBAAkBL,EAAWjB,KAAKsB,aAAnD,IAET,OAAKf,EAGAY,EAGII,MAAM,GAAD,OAAIN,EAAWjB,KAAf,6BAFZI,GAASoB,EAAAA,EAAAA,IAAWP,SAKtBJ,KARSU,MAAM,mCAShB,EASG,WACE,SAAC3B,EAAD,CACE6B,KAAK,OACLzB,KAAK,OAEL0B,MAAM,yIACNC,UAAQ,EACRf,MAAOZ,EACP4B,SAAUnB,KAEZ,SAACb,EAAD,CACE6B,KAAK,MACLzB,KAAK,SAEL0B,MAAM,+FACNC,UAAQ,EACRf,MAAOV,EACP0B,SAAUnB,KAGZ,mBAAQgB,KAAK,SAAb,SAAuB3B,QAI9B,C,oIC9EY+B,EAAkBlC,EAAAA,GAAAA,IAAH,6NAYfmC,EAAKnC,EAAAA,GAAAA,GAAH,+CAGFoC,EAAKpC,EAAAA,GAAAA,GAAH,8C,sGCdA,SAASqC,IACtB,OACE,0BACE,UAAC,IAAD,YACE,SAAC,EAAAF,GAAD,UAAI,eACJ,SAAC,IAAD,CAAahC,IAAI,oBAIxB,C","sources":["Redux/slises/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Container/Container.js","pages/HomePage.js"],"sourcesContent":["export const selectcontacts = state => state.contacts.contacts;\r\nexport const selectIsLoading = state => state.contacts.isLoading;\r\nexport const selectError = state => state.contacts.error;\r\nexport const selectFilter = state => state.filter;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledForm = styled.form`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n\r\n  width: 200px;\r\n  margin: 10px auto 10px auto;\r\n  justify-content: center;\r\n`;\r\nexport const StyledContactInput = styled.input`\r\n  border: 1px solid black;\r\n  border-radius: 10px;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { StyledContactInput, StyledForm } from './ContactForm.styled';\r\nimport { addContact } from 'Redux/slises/operations';\r\nimport { selectcontacts } from 'Redux/slises/selectors';\r\nimport { selectIsLoggedIn } from 'Redux/auth/selectors';\r\n\r\nexport const ContactForm = ({ btn }) => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const contacts = useSelector(selectcontacts);\r\n  const isLoggedIn = useSelector(selectIsLoggedIn);\r\n\r\n  // Контрольовані імпути\r\n  const handleChange = evt => {\r\n    if (evt.target.name === 'name') {\r\n      setName(evt.target.value);\r\n    } else if (evt.target.name === 'number') {\r\n      setNumber(evt.target.value);\r\n    }\r\n  };\r\n\r\n  // Сабміт форми\r\n  const onSubmit = evt => {\r\n    evt.preventDefault();\r\n    const form = evt.target;\r\n    const name = form.elements.name.value;\r\n    const number = form.elements.number.value;\r\n    const newContact = { name, number };\r\n    // console.log();\r\n\r\n    // перевірка на наявний конткт\r\n    const includesName = contacts.find(\r\n      contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\r\n    );\r\n    if (!isLoggedIn) {\r\n      return alert(`Please log in to the application`);\r\n    }\r\n    if (!includesName) {\r\n      dispatch(addContact(newContact));\r\n    } else {\r\n      return alert(`${newContact.name} is already in contacts`);\r\n    }\r\n\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <StyledForm onSubmit={onSubmit}>\r\n        <StyledContactInput\r\n          type=\"text\"\r\n          name=\"name\"\r\n          // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n          value={name}\r\n          onChange={handleChange}\r\n        />\r\n        <StyledContactInput\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n          value={number}\r\n          onChange={handleChange}\r\n        />\r\n\r\n        <button type=\"submit\">{btn}</button>\r\n      </StyledForm>\r\n    </div>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledContainer = styled.div`\r\n  /* border: 1px solid black; */\r\n  border-radius: 10px;\r\n  width: 300px;\r\n\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding: 10px;\r\n\r\n  box-shadow: 0px 0px 15px 0px rgba(24, 106, 117, 1);\r\n`;\r\n\r\nexport const H1 = styled.h1`\r\n  text-align: center;\r\n`;\r\nexport const H2 = styled.h2`\r\n  text-align: center;\r\n`;\r\n","import { ContactForm } from 'components/ContactForm/ContactForm';\r\nimport { H1, StyledContainer } from 'components/Container/Container';\r\n\r\nexport default function HomePage() {\r\n  return (\r\n    <div>\r\n      <StyledContainer>\r\n        <H1>Phonebook</H1>\r\n        <ContactForm btn=\"Add contact\" />\r\n      </StyledContainer>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["selectcontacts","state","contacts","selectIsLoading","isLoading","StyledForm","styled","StyledContactInput","ContactForm","btn","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","isLoggedIn","selectIsLoggedIn","handleChange","evt","target","value","reset","onSubmit","preventDefault","form","newContact","elements","includesName","find","contact","toLowerCase","alert","addContact","type","title","required","onChange","StyledContainer","H1","H2","HomePage"],"sourceRoot":""}