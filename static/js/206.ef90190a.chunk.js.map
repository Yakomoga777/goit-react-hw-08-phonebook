{"version":3,"file":"static/js/206.ef90190a.chunk.js","mappings":"+LAAO,IAAMA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASA,QAAnB,EACtBC,EAAkB,SAAAF,GAAK,OAAIA,EAAMC,SAASE,SAAnB,C,0ICUvBC,EAAc,SAAC,GAAa,IAAXC,EAAU,EAAVA,IAC5B,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAEXX,GAAWY,EAAAA,EAAAA,IAAYd,EAAAA,IACvBe,GAAaD,EAAAA,EAAAA,IAAYE,EAAAA,IAGzBC,EAAe,SAAAC,GACK,SAApBA,EAAIC,OAAOX,KACbC,EAAQS,EAAIC,OAAOC,OACU,WAApBF,EAAIC,OAAOX,MACpBG,EAAUO,EAAIC,OAAOC,MAExB,EA2BKC,EAAQ,WACZZ,EAAQ,IACRE,EAAU,GACX,EAED,OACE,0BACE,UAAC,KAAD,CAAYW,SA/BC,SAAAJ,GACfA,EAAIK,iBACJ,IAAMC,EAAON,EAAIC,OAGXM,EAAa,CAAEjB,KAFRgB,EAAKE,SAASlB,KAAKY,MAELV,OADZc,EAAKE,SAAShB,OAAOU,OAK9BO,EAAezB,EAAS0B,MAC5B,SAAAC,GAAO,OAAIA,EAAQrB,KAAKsB,gBAAkBL,EAAWjB,KAAKsB,aAAnD,IAET,OAAKf,EAGAY,EAGII,MAAM,GAAD,OAAIN,EAAWjB,KAAf,6BAFZI,GAASoB,EAAAA,EAAAA,IAAWP,SAKtBJ,KARSU,MAAM,mCAShB,EASG,WACE,SAAC,KAAD,CACEE,KAAK,OACLzB,KAAK,OAEL0B,MAAM,yIACNC,UAAQ,EACRf,MAAOZ,EACP4B,SAAUnB,KAEZ,SAAC,KAAD,CACEgB,KAAK,MACLzB,KAAK,SAEL0B,MAAM,+FACNC,UAAQ,EACRf,MAAOV,EACP0B,SAAUnB,KAGZ,SAAC,KAAD,CAAqBgB,KAAK,SAA1B,SAAoC3B,QAI3C,C,+ICjFY+B,EAAaC,EAAAA,GAAAA,KAAH,2JASVC,EAAqBD,EAAAA,GAAAA,MAAH,yHAMlBE,GAAsBF,EAAAA,EAAAA,IAAOG,EAAAA,EAAPH,CAAH,+E,yGChBnBI,EAAaJ,EAAAA,GAAAA,GAAH,maAkBVG,EAAeH,EAAAA,GAAAA,OAAH,sZ,oIClBZK,EAAkBL,EAAAA,GAAAA,IAAH,6NAYfM,EAAKN,EAAAA,GAAAA,GAAH,+CAGFO,EAAKP,EAAAA,GAAAA,GAAH,8C,sGCdA,SAASQ,IACtB,OACE,0BACE,UAAC,IAAD,YACE,SAAC,EAAAF,GAAD,UAAI,eACJ,SAAC,IAAD,CAAatC,IAAI,oBAIxB,C","sources":["Redux/slises/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactForm/ContactForm.styled.js","components/ContactList/ContactItem.styled.js","components/Container/Container.js","pages/HomePage.js"],"sourcesContent":["export const selectcontacts = state => state.contacts.contacts;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  StyledContactButton,\n  StyledContactInput,\n  StyledForm,\n} from './ContactForm.styled';\nimport { addContact } from 'Redux/slises/operations';\nimport { selectcontacts } from 'Redux/slises/selectors';\nimport { selectIsLoggedIn } from 'Redux/auth/selectors';\n\nexport const ContactForm = ({ btn }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectcontacts);\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n\n  // Контрольовані імпути\n  const handleChange = evt => {\n    if (evt.target.name === 'name') {\n      setName(evt.target.value);\n    } else if (evt.target.name === 'number') {\n      setNumber(evt.target.value);\n    }\n  };\n\n  // Сабміт форми\n  const onSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.target;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n    const newContact = { name, number };\n    // console.log();\n\n    // перевірка на наявний конткт\n    const includesName = contacts.find(\n      contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    );\n    if (!isLoggedIn) {\n      return alert(`Please log in to the application`);\n    }\n    if (!includesName) {\n      dispatch(addContact(newContact));\n    } else {\n      return alert(`${newContact.name} is already in contacts`);\n    }\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div>\n      <StyledForm onSubmit={onSubmit}>\n        <StyledContactInput\n          type=\"text\"\n          name=\"name\"\n          // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n        <StyledContactInput\n          type=\"tel\"\n          name=\"number\"\n          // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n\n        <StyledContactButton type=\"submit\">{btn}</StyledContactButton>\n      </StyledForm>\n    </div>\n  );\n};\n","import { StyledButton } from 'components/ContactList/ContactItem.styled';\nimport styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n\n  width: 200px;\n  margin: 10px auto 10px auto;\n  justify-content: center;\n`;\nexport const StyledContactInput = styled.input`\n  border: 1px solid black;\n  border-radius: 10px;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const StyledContactButton = styled(StyledButton)`\n  height: 40px;\n  padding: 10px;\n\n  line-height: 1;\n`;\n","import styled from 'styled-components';\n\nexport const StyledItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  border-radius: 10px;\n\n  width: 280px;\n\n  &:hover {\n    /* width: 270px; */\n    /* height: 50px; */\n    /* border: 2px solid rgba(229, 229, 188); */\n    /* margin: -2px -2px -2px -2px;\n    border-radius: 10px; */\n    /* background-color: rgba(24, 232, 21, 0.24); */\n    box-shadow: 0px 0px 15px 0px rgba(43, 201, 202, 0.5);\n  }\n`;\n\nexport const StyledButton = styled.button`\n  background-color: transparent;\n  border: 1px solid black;\n  border-radius: 10px;\n\n  &:hover {\n    /* width: 270px; */\n    /* height: 50px; */\n    /* border: 2px solid rgba(229, 229, 188); */\n    /* margin: -2px -2px -2px -2px;\n    border-radius: 10px; */\n    /* background-color: rgba(24, 232, 21, 0.24); */\n    box-shadow: 0px 0px 15px 0px rgba(43, 201, 202, 1);\n  }\n`;\n\n// export const StyledButton = styled.button`\n","import styled from 'styled-components';\n\nexport const StyledContainer = styled.div`\n  /* border: 1px solid black; */\n  border-radius: 10px;\n  width: 300px;\n\n  margin-left: auto;\n  margin-right: auto;\n  padding: 10px;\n\n  box-shadow: 0px 0px 15px 0px rgba(24, 106, 117, 1);\n`;\n\nexport const H1 = styled.h1`\n  text-align: center;\n`;\nexport const H2 = styled.h2`\n  text-align: center;\n`;\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { H1, StyledContainer } from 'components/Container/Container';\n\nexport default function HomePage() {\n  return (\n    <div>\n      <StyledContainer>\n        <H1>Phonebook</H1>\n        <ContactForm btn=\"Add contact\" />\n      </StyledContainer>\n    </div>\n  );\n}\n"],"names":["selectcontacts","state","contacts","selectIsLoading","isLoading","ContactForm","btn","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","isLoggedIn","selectIsLoggedIn","handleChange","evt","target","value","reset","onSubmit","preventDefault","form","newContact","elements","includesName","find","contact","toLowerCase","alert","addContact","type","title","required","onChange","StyledForm","styled","StyledContactInput","StyledContactButton","StyledButton","StyledItem","StyledContainer","H1","H2","HomePage"],"sourceRoot":""}